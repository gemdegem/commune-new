"use strict";(()=>{var e={};e.id=451,e.ids=[451],e.modules={2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},5403:e=>{e.exports=require("next/dist/client/components/request-async-storage.external")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},4749:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},1017:e=>{e.exports=require("path")},7310:e=>{e.exports=require("url")},5841:(e,a,t)=>{t.r(a),t.d(a,{GlobalError:()=>s.a,__next_app__:()=>x,originalPathname:()=>p,pages:()=>c,routeModule:()=>h,tree:()=>d});var r=t(7096),n=t(6132),o=t(7284),s=t.n(o),l=t(2564),i={};for(let e in l)0>["default","tree","pages","GlobalError","originalPathname","__next_app__","routeModule"].indexOf(e)&&(i[e]=()=>l[e]);t.d(a,i);let d=["",{children:["docs",{children:["modules",{children:["vali-text-realfake",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(t.bind(t,7684)),"/Users/bartek/Downloads/Programowanie/Commune-fresh/frontend/src/app/docs/modules/vali-text-realfake/page.mdx"]}]},{}]},{}]},{layout:[()=>Promise.resolve().then(t.bind(t,7941)),"/Users/bartek/Downloads/Programowanie/Commune-fresh/frontend/src/app/docs/layout.tsx"],metadata:{icon:[async e=>(await Promise.resolve().then(t.bind(t,563))).default(e)],apple:[],openGraph:[],twitter:[],manifest:void 0}}]},{layout:[()=>Promise.resolve().then(t.bind(t,4959)),"/Users/bartek/Downloads/Programowanie/Commune-fresh/frontend/src/app/layout.tsx"],"not-found":[()=>Promise.resolve().then(t.t.bind(t,9291,23)),"next/dist/client/components/not-found-error"],metadata:{icon:[async e=>(await Promise.resolve().then(t.bind(t,563))).default(e)],apple:[],openGraph:[],twitter:[],manifest:void 0}}],c=["/Users/bartek/Downloads/Programowanie/Commune-fresh/frontend/src/app/docs/modules/vali-text-realfake/page.mdx"],p="/docs/modules/vali-text-realfake/page",x={require:t,loadChunk:()=>Promise.resolve()},h=new r.AppPageRouteModule({definition:{kind:n.x.APP_PAGE,page:"/docs/modules/vali-text-realfake/page",pathname:"/docs/modules/vali-text-realfake",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:d}})},7684:(e,a,t)=>{t.r(a),t.d(a,{default:()=>MDXContent});var r=t(1837),n=t(818);function _createMdxContent(e){let a={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[r.jsx(a.h1,{children:"data.text.realfake"}),"\n",r.jsx(a.p,{children:"The following is a dataset that takes a folder of text, and draws real or fake samples from that folder of text. This means that it will take a folder of text, and draw samples from that folder of text. It will then return a sample of text that is either real or fake. This is useful for training a model to detect real or fake text. This uses a random variable."}),"\n",r.jsx(a.h2,{children:"Register"}),"\n",r.jsx(a.pre,{children:r.jsx(a.code,{className:"language-bash",children:"c vali.text.realfake register tag=whadup\n"})}),"\n",r.jsx(a.h2,{children:"Serve"}),"\n",r.jsx(a.pre,{children:r.jsx(a.code,{className:"language-bash",children:"\nc vali.text.realfake serve tag=whadup\n"})}),"\n",r.jsx(a.h2,{children:"Stake"}),"\n",r.jsx(a.pre,{children:r.jsx(a.code,{className:"language-bash",children:"\nc stake {keywithbalance} {amount} vali.text.realfake::whadup\n"})})]})}function MDXContent(e={}){let{wrapper:a}={...(0,n.a)(),...e.components};return a?r.jsx(a,{...e,children:r.jsx(_createMdxContent,{...e})}):_createMdxContent(e)}}};var a=require("../../../../webpack-runtime.js");a.C(e);var __webpack_exec__=e=>a(a.s=e),t=a.X(0,[975,323,837,429,603,333],()=>__webpack_exec__(5841));module.exports=t})();